name: Ubuntu builds

on:
  push:
    branches:
      - main
      - fix/github-workflow
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os: [ubuntu-22.04] # for now just run on 22, but soon also use ubuntu-latest for 24
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: ubuntu-22.04
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-22.04
            c_compiler: clang
            cpp_compiler: clang++
#          - os: ubuntu-latest
#            c_compiler: gcc
#            cpp_compiler: g++
#          - os: ubuntu-latest
#            c_compiler: clang
#            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          /usr/local/lib
          /usr/local/include
          ~/.cache
        key: ${{ runner.os }}-build-cache-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-cache-

    - name: Add Eigen3
      run: sudo apt install libeigen3-dev

    - name: Add TinyXML2
      run: |
        sudo apt-get update
        sudo apt-get install libtinyxml2-dev

    - name: Add urdfom_headers
      run: |
        sudo apt-get update
        sudo apt-get install -y liburdfdom-headers-dev liburdfdom-tools

    - name: Add console_bridge
      run: |
        sudo apt-get update
        sudo apt-get install libconsole-bridge-dev

    - name: Clone and build urdfdom
      run: |
          git clone https://github.com/ros/urdfdom.git
          cd urdfdom
          mkdir build
          cd build
          cmake ..
          make
          sudo make install

    - name: Add ROS2
      run: |
        sudo apt install software-properties-common
        sudo add-apt-repository universe
        sudo apt update && sudo apt install curl -y
        sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
        sudo apt update
        sudo apt upgrade
        sudo apt install ros-humble-desktop
        source /opt/ros/humble/setup.bash

#    - name: Add Pinocchio
#      run: |
#        if [ ! -d "pinocchio" ]
#        then
#          git clone --recursive https://github.com/stack-of-tasks/pinocchio
#          cd pinocchio
#          git remote update
#          git fetch
#          git checkout devel
#          mkdir build && cd build
#          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_PYTHON_INTERFACE=OFF
#          make -j10
#          make install
#        fi

    - name: Add GoogleTest (Required by CppAD)
      run: |
        sudo apt install libgtest-dev build-essential cmake
        cd /usr/src/googletest
        sudo cmake .
        sudo cmake --build . --target install

    - name: Add CppAD
      run: |
        cd ~
        git clone https://github.com/coin-or/CppAD.git cppad
        cd cppad
        mkdir build && cd build
        cmake ..
        sudo make install

    - name: Add CppADCodeGen
      run: |
        git clone https://github.com/joaoleal/CppADCodeGen.git CppADCodeGen
        cd CppADCodeGen
        mkdir build && cd build
        cmake ..
        sudo make install

    - name: Add MUMPS
      run: |
        git clone https://github.com/coin-or-tools/ThirdParty-Mumps.git
        cd ThirdParty-Mumps
        ./get.Mumps
        ./configure
        make
        sudo make install

    - name: Add IPOPT
      run: |
        sudo apt-get install gcc g++ gfortran git patch wget pkg-config liblapack-dev libmetis-dev
        sudo apt install liblapack-dev
        git clone https://github.com/coin-or/Ipopt.git
        cd Ipopt
        mkdir build && cd build
        ../configure
        make
        sudo make install

    - name: Add OSQP
      run: |
        git clone https://github.com/osqp/osqp
        cd osqp
        mkdir build
        cd build
        cmake -G "Unix Makefiles" ..
        cmake --build .
        sudo cmake --build . --target install

    - name: OSQP-Eigen
      run: |
        git clone https://github.com/robotology/osqp-eigen.git
        cd osqp-eigen
        mkdir build
        cd build
        cmake ..
        sudo make
        sudo make install

    - name: Add Rust (Required by Clarabel)
      run: curl -y --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

    - name: Add Clarabel
      run: |
        git clone --recurse-submodules https://github.com/oxfordcontrol/Clarabel.cpp.git
        cd Clarabel.cpp
        mkdir build
        cd build
        cmake ..
        cmake --build .

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}
        -DCMAKE_PREFIX_PATH=/opt/openrobots
        -DCLARABEL_DIR="/home/runner/work/torc/torc/Clarabel.cpp"

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
