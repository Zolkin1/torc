name: Ubuntu builds

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os: [ubuntu-22.04] # for now just run on 22, but soon also use ubuntu-latest for 24
        build_type: [Release]
        c_compiler: [gcc, clang]
        include:
          - os: ubuntu-22.04
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-22.04
            c_compiler: clang
            cpp_compiler: clang++
#          - os: ubuntu-latest
#            c_compiler: gcc
#            cpp_compiler: g++
#          - os: ubuntu-latest
#            c_compiler: clang
#            cpp_compiler: clang++

    steps:
    - uses: actions/checkout@v4

    - name: Add robotpkg
      run: |
        sudo sh -c "echo \"deb [arch=amd64] http://robotpkg.openrobots.org/packages/debian/pub $(lsb_release -cs) robotpkg\" >> /etc/apt/sources.list "
        sudo apt-key adv --fetch-keys http://robotpkg.openrobots.org/packages/debian/robotpkg.key

    - name: Get dependencies
      run: |
        export APT_DEPENDENCIES="libeigen3-dev \
                                 robotpkg-pinocchio"
        echo $APT_DEPENDENCIES
        sudo apt-get update -qq
        sudo apt-get install -qq ${APT_DEPENDENCIES}
        export PATH=/opt/openrobots/bin:$PATH
        export PKG_CONFIG_PATH=/opt/openrobots/lib/pkgconfig:$PKG_CONFIG_PATH
        export LD_LIBRARY_PATH=/opt/openrobots/lib:$LD_LIBRARY_PATH
        export CMAKE_PREFIX_PATH=/opt/openrobots:$CMAKE_PREFIX_PATH
        echo $CMAKE_PREFIX_PATH

    - name: Add GoogleTest (Required by CppAD)
      run: |
        sudo apt install libgtest-dev build-essential cmake
        cd /usr/src/googletest
        sudo cmake .
        sudo cmake --build . --target install

    - name: Add CppAD
      run: |
        cd ~
        git clone https://github.com/coin-or/CppAD.git cppad
        cd cppad
        mkdir build && cd build
        cmake ..
        sudo make install

    - name: Add CppADCodeGen
      run: |
        cd ~
        git clone https://github.com/joaoleal/CppADCodeGen.git CppADCodeGen
        cd CppADCodeGen
        mkdir build && cd build
        cmake ..
        sudo make install

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}
        -DCMAKE_PREFIX_PATH=/opt/openrobots

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
